version: '3.8'

services:
  # PHP Application
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        - APP_ENV=production
    container_name: taskapp_php_prod
    restart: always
    working_dir: /var/www/html
    volumes:
      - app_storage:/var/www/html/storage
      - app_bootstrap_cache:/var/www/html/bootstrap/cache
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=${APP_URL:-https://localhost}
      - DB_HOST=mysql
      - DB_DATABASE=${DB_DATABASE:-task_management}
      - DB_USERNAME=${DB_USERNAME:-taskapp}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
      - MAIL_HOST=${MAIL_HOST:-smtp.mailtrap.io}
      - MAIL_PORT=${MAIL_PORT:-587}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    depends_on:
      - mysql
      - redis
    networks:
      - taskapp_network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: taskapp_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public:/var/www/html/public:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ssl_certificates:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - taskapp_network
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: taskapp_mysql_prod
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE:-task_management}
      MYSQL_USER: ${DB_USERNAME:-taskapp}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_logs:/var/log/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      - mysql_backups:/backups
    networks:
      - taskapp_network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Redis Cache/Session/Queue
  redis:
    image: redis:7-alpine
    container_name: taskapp_redis_prod
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - taskapp_network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Database backup service
  mysql-backup:
    image: mysql:8.0
    container_name: taskapp_mysql_backup
    restart: "no"
    environment:
      MYSQL_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE:-task_management}
    volumes:
      - mysql_backups:/backups
    networks:
      - taskapp_network
    command: >
      sh -c "
        while true; do
          mysqldump -h mysql -u root -p${DB_ROOT_PASSWORD} ${DB_DATABASE:-task_management} > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql
          find /backups -name '*.sql' -mtime +7 -delete
          sleep 86400
        done
      "
    depends_on:
      - mysql

# Volumes
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  app_storage:
    driver: local
  app_bootstrap_cache:
    driver: local
  ssl_certificates:
    driver: local
  nginx_logs:
    driver: local
  mysql_logs:
    driver: local
  mysql_backups:
    driver: local

# Networks
networks:
  taskapp_network:
    driver: bridge